<?xml version="1.0"?>
<launch>
    <arg name="scan_processing" default="false"/>
    <arg name="camera" default="camera"/>
    <arg name="depth" value="depth_registered" />
    <arg name="rgb_processing" default="false"/>
    <arg name="ir_processing" default="false"/>
    <arg name="depth_processing" default="false"/>
    <arg name="depth_registered_processing" default="false"/>
    <arg name="disparity_processing" default="false"/>
    <arg name="disparity_registered_processing" default="false"/>



    <!-- Create a frame to attach the scans -->
    <node pkg="tf" type="static_transform_publisher" name="camera_mount_broadcaster" args="0 0 0.3 0 0 0 1 base_link scan_link 50"/>

    <!-- 3D sensor -->
    <arg name="3d_sensor" default="$(env TURTLEBOT_3D_SENSOR)"/>
    <!-- r200, kinect, asus_xtion_pro -->
    <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
        <!-- We must specify an absolute topic name because if not it will be prefixed by "$(arg camera)".
                Probably is a bug in the nodelet manager: https://github.com/ros/nodelet_core/issues/7 -->
        <arg name="scan_topic" value="/scan" />
        <arg name="scan_processing" value="$(arg scan_processing)" />
        <!-- Processing Modules -->
        <arg name="rgb_processing" value="$(arg rgb_processing)"/>
        <arg name="ir_processing" value="$(arg ir_processing)"/>
        <arg name="depth_processing" value="$(arg depth_processing)"/>
        <arg name="depth_registered_processing" value="$(arg depth_registered_processing)"/>
        <arg name="disparity_processing" value="$(arg disparity_processing)"/>
        <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)"/>


    </include>

    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet $(arg camera)/$(arg camera)_nodelet_manager">
        <!-- Pixel rows to use to generate the laserscan. For each column, the scan will
           return the minimum value for those pixels centered vertically in the image. -->
        <param name="scan_height" value="10"/>
        <param name="output_frame_id" value="scan_link"/>
        <param name="range_min" value="0.3"/>
        <remap from="image" to="$(arg camera)/$(arg depth)/image_raw"/>
        <remap from="scan" to="/scan"/>

        <!-- Somehow topics here get prefixed by "$(arg camera)" when not inside an app namespace,
           so in this case "$(arg scan_topic)" must provide an absolute topic name (issue #88).
           Probably is a bug in the nodelet manager: https://github.com/ros/nodelet_core/issues/7 -->
        <remap from="$(arg camera)/image" to="$(arg camera)/$(arg depth)/image_raw"/>
        <remap from="$(arg camera)/scan" to="/scan"/>
    </node>

    <!-- Run turret control -->
    <include file="$(find pgbot_turret_control)/launch/complete.launch">
    </include>

    <!-- Run camera control -->
    <include file="$(find pgbot_camera_control)/launch/camera_control.launch">
    </include>

    <!-- Turtlebot -->
    <arg name="base" default="$(env TURTLEBOT_BASE)" doc="mobile base type [create, roomba]"/>
    <arg name="battery" default="$(env TURTLEBOT_BATTERY)" doc="kernel provided locatio for battery info, use /proc/acpi/battery/BAT0 in 2.6 or earlier kernels." />
    <arg name="stacks" default="$(env TURTLEBOT_STACKS)" doc="stack type displayed in visualisation/simulation [circles, hexagons]"/>
    <arg name="simulation" default="$(env TURTLEBOT_SIMULATION)" doc="set flags to indicate this turtle is run in simulation mode."/>
    <arg name="serialport" default="$(env TURTLEBOT_SERIAL_PORT)" doc="used by create to configure the port it is connected on [/dev/ttyUSB0, /dev/ttyS0]"/>

    <param name="/use_sim_time" value="$(arg simulation)"/>

    <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find pgbot_robot_description)/robot/iw_turtlebot.urdf.xacro'" />
    <param name="robot_description" command="$(arg urdf_file)" />


    <!-- important generally, but specifically utilised by the current app manager -->
    <param name="robot/name" value="$(optenv ROBOT turtlebot)"/>
    <param name="robot/type" value="turtlebot"/>
    <param name="mobile_base/acceleration_limiter" value="true"/>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="5.0" />
    </node>
    <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
        <rosparam command="load" file="$(find turtlebot_bringup)/param/$(arg base)/diagnostics.yaml" />
    </node>


    <include file="$(find turtlebot_bringup)/launch/includes/mobile_base.launch.xml">
        <arg name="base" value="$(arg base)" />
        <arg name="serialport" value="$(arg serialport)" />
    </include>


    <!-- Run Base -->
    <include file="$(find pgbot_bringup)/launch/complete_base.launch">
    </include>
</launch>


